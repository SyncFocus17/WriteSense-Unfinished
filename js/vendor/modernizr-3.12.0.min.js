/*!
 * WriteSense Modernizr Custom Build v3.12.0
 * Feature detection for critical application components
 */

;(function(window, document, undefined) {
  var tests = [];
  var ModernizrProto = {
    _version: '3.12.0',
    _config: {
      'classPrefix': '',
      'enableClasses': true,
      'enableJSClass': true,
      'usePrefixes': true
    },
    _q: [],
    on: function(test, cb) {
      var self = this;
      setTimeout(function() {
        cb(self[test]);
      }, 0);
    },
    addTest: function(name, fn, options) {
      tests.push({name: name, fn: fn, options: options});
    },
    addAsyncTest: function(fn) {
      tests.push({name: null, fn: fn});
    }
  };

  // Fake some of the default modules
  var Modernizr = function() {};
  Modernizr.prototype = ModernizrProto;
  var modernizr = new Modernizr();

  // Critical features for WriteSense
  var features = {
    // Editor Features
    contentEditable: function() {
      return 'contentEditable' in document.documentElement;
    },

    // File Operations
    fileApi: function() {
      return !!(window.File && window.FileReader && window.FileList && window.Blob);
    },

    // Real-time Collaboration
    webSockets: function() {
      return 'WebSocket' in window || 'MozWebSocket' in window;
    },

    // Voice Input
    speechRecognition: function() {
      return !!(window.SpeechRecognition || window.webkitSpeechRecognition);
    },

    // Storage
    localStorage: function() {
      try {
        localStorage.setItem('test', 'test');
        localStorage.removeItem('test');
        return true;
      } catch(e) {
        return false;
      }
    },

    // Modern CSS Features
    cssGrid: function() {
      return testPropsAll('grid-template-columns', '1fr');
    },

    flexbox: function() {
      return testPropsAll('flexBasis', '1px', true);
    },

    // Performance Features
    requestAnimationFrame: function() {
      return !!(window.requestAnimationFrame ||
        window.webkitRequestAnimationFrame ||
        window.mozRequestAnimationFrame);
    },

    // Service Workers for PWA
    serviceWorker: function() {
      return 'serviceWorker' in navigator;
    },

    // Touch Support
    touchEvents: function() {
      return !!(('ontouchstart' in window) ||
        (window.DocumentTouch && document instanceof DocumentTouch));
    }
  };

  // Helper function for CSS property testing
  function testPropsAll(prop, value, skipValueTest) {
    var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),
      props = (prop + ' ' + ['Webkit', 'Moz', 'O', 'ms'].join(ucProp + ' ') + ucProp).split(' ');

    if (skipValueTest) return !!props;

    for (var i in props) {
      if (props[i] in document.createElement('div').style) {
        return true;
      }
    }
    return false;
  }

  // Run all tests
  for (var feature in features) {
    if (features.hasOwnProperty(feature)) {
      modernizr.addTest(feature, features[feature]);
    }
  }

  // Handle async tests and callbacks
  function runTests() {
    for (var i = 0; i < tests.length; i++) {
      var test = tests[i];
      if (test.fn) {
        modernizr[test.name] = test.fn();
      }
    }
  }

  // DOM Ready
  function domReady(fn) {
    if (document.readyState !== 'loading') {
      fn();
    } else {
      document.addEventListener('DOMContentLoaded', fn);
    }
  }

  // Initialize
  domReady(function() {
    runTests();

    // Add classes to HTML element
    var classes = [];
    for (var feature in modernizr) {
      if (modernizr.hasOwnProperty(feature) && typeof modernizr[feature] === 'boolean') {
        classes.push((modernizr[feature] ? '' : 'no-') + feature);
      }
    }
    document.documentElement.className += ' ' + classes.join(' ');
  });

  // Export Modernizr
  window.Modernizr = modernizr;

})(window, document);

// WriteSense-specific feature detection extensions
Modernizr.addTest('writesense', function() {
  return {
    editor: {
      canEdit: Modernizr.contentEditable,
      hasFileSupport: Modernizr.fileApi,
      hasVoiceInput: Modernizr.speechRecognition
    },
    collaboration: {
      hasRealtimeSupport: Modernizr.webSockets,
      canStoreLocally: Modernizr.localStorage
    },
    ui: {
      supportsModernLayout: Modernizr.cssGrid && Modernizr.flexbox,
      hasTouchSupport: Modernizr.touchEvents
    },
    pwa: {
      canWorkOffline: Modernizr.serviceWorker,
      hasStorageAPI: Modernizr.localStorage
    },
    performance: {
      hasAnimationFrame: Modernizr.requestAnimationFrame
    }
  };
});

// Check if browser is capable of running WriteSense
Modernizr.writesenseReady = function() {
  var requirements = [
    'contentEditable',
    'webSockets',
    'localStorage',
    'flexbox'
  ];

  return requirements.every(function(feature) {
    return Modernizr[feature];
  });
};
